"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[103],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>m});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),y=a,m=u["".concat(s,".").concat(y)]||u[y]||p[y]||o;return r?t.createElement(m,i(i({ref:n},d),{},{components:r})):t.createElement(m,i({ref:n},d))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},93257:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(87462),a=(r(67294),r(3905));const o={sidebar_position:3},i="Creator Code",l={unversionedId:"examples/creator-code",id:"examples/creator-code",title:"Creator Code",description:"Server",source:"@site/docs/examples/creator-code.md",sourceDirName:"examples",slug:"/examples/creator-code",permalink:"/LinkTracker/docs/examples/creator-code",draft:!1,editUrl:"https://github.com/re-sync-dev/LinkTracker/edit/main/docs/examples/creator-code.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Promo Code",permalink:"/LinkTracker/docs/examples/promo-code"}},s={},c=[{value:"Server",id:"server",level:2}],d={toc:c},u="wrapper";function p(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creator-code"},"Creator Code"),(0,a.kt)("h2",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'--[==[\n\n    Copyright (C) Re-Sync - All Rights Reserved\n\n    [init.server.lua]:\n        Example server description\n\n    [Author(s)]:\n        Vyon - https://github.com/Vyon\n\n--]==]\n\n-- Services:\nlocal Players = game:GetService("Players")\nlocal DataStoreService = game:GetService("DataStoreService")\nlocal HttpService = game:GetService("HttpService")\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\n\n-- Modules:\nlocal LinkTracker = require(ReplicatedStorage.Packages.LinkTracker)\n\n-- Types:\ntype LinkData = LinkTracker.LinkData\ntype CustomLinkData = LinkData & {\n    Coins: number,\n    AlreadyUsed: { number },\n}\n\n-- Constants:\nlocal USERS_ALLOWED_TO_CREATE_LINKS = {\n    2394560147, --\x3e VyonEXE (Me)\n}\n\n-- Locals:\nlocal CreateLink = Instance.new("RemoteFunction")\nCreateLink.Name = "CreateLink"\nCreateLink.Parent = ReplicatedStorage\n\nlocal SendChat = Instance.new("RemoteEvent")\nSendChat.Name = "SendChat"\nSendChat.Parent = ReplicatedStorage\n\n-- Variables:\nlocal ExampleDataStore = DataStoreService:GetDataStore("ExampleDataStore")\nlocal RateLimit = {}\n\n-- Functions:\nlocal function SetupLeaderstats(Player: Player)\n    local Leaderstats = Instance.new("Folder")\n    Leaderstats.Name = "leaderstats"\n    Leaderstats.Parent = Player\n\n    local Coins = Instance.new("IntValue")\n    Coins.Name = "Coins"\n    Coins.Parent = Leaderstats\n    Coins.Value = 0\n\n    pcall(function(...)\n        Coins.Value = ExampleDataStore:GetAsync(tostring(Player.UserId))\n    end)\nend\n\nlocal function OnPlayerAdded(Player: Player)\n    SetupLeaderstats(Player)\n\n    LinkTracker:OnJoin(Player, {\n        UsableLink = function(Player: Player, LinkData: CustomLinkData)\n            if table.find(LinkData.AlreadyUsed, Player.UserId) then --\x3e Player has already used this link.\n                return false\n            end\n\n            return true\n        end,\n\n        ConsumeLink = function(Player: Player, LinkData: CustomLinkData)\n            local Referrer = Players:GetNameFromUserIdAsync(LinkData.Referrer)\n\n            print(`[LinkTracker]: {Player.Name} joined from {Referrer}\'s link.`)\n            table.insert(LinkData.AlreadyUsed, Player.UserId)\n\n            -- Grant the player their rewards:\n            local Leaderstats = Player:FindFirstChild("leaderstats")\n            local Coins = Leaderstats and Leaderstats:FindFirstChild("Coins")\n\n            Coins.Value += LinkData.Coins\n\n            SendChat:FireAllClients(`{Player.Name} earned {LinkData.Coins} by using {Referrer}\'s code!`)\n\n            -- NOTE: Make sure that when using a custom server that you have a\n            -- secure connection (https) that has TLS enabled. CloudFlare provides free\n            -- certificates and you can enable TLS without a problem.\n\n            -- Make a request to an external server to update how many users the creator has invited.\n\n            local Endpoint = `https://example.com/creator/{LinkData.Referrer}` --\x3e Change this to whatever your endpoint is\n\n            HttpService:PostAsync(Endpoint, Player.UserId)\n        end,\n    })\nend\n\nlocal function OnPlayerRemoving(Player: Player)\n    local Leaderstats = Player:FindFirstChild("leaderstats")\n    local Coins = Leaderstats and Leaderstats:FindFirstChild("Coins")\n\n    if not Coins then\n        return\n    end\n\n    ExampleDataStore:SetAsync(tostring(Player.UserId), Coins.Value)\nend\n\n-- Main:\nfor _, Player in Players:GetPlayers() do\n    task.spawn(OnPlayerAdded, Player)\nend\n\n-- Connections:\nPlayers.PlayerAdded:Connect(OnPlayerAdded)\nPlayers.PlayerRemoving:Connect(OnPlayerRemoving)\n\n-- Binds:\nCreateLink.OnServerInvoke = function(Player: Player, UserId: string): string?\n    -- Sanity check to make sure exploiters / people who shouldn\'t be creating links can\'t.\n    if not table.find(USERS_ALLOWED_TO_CREATE_LINKS, Player.UserId) then\n        return\n    end\n\n    if table.find(RateLimit, Player.UserId) then\n        return\n    end\n\n    table.insert(RateLimit, Player.UserId)\n\n    task.delay(10, function()\n        table.remove(RateLimit, table.find(RateLimit, Player.UserId))\n    end)\n\n    local Link = LinkTracker:GenerateLink({\n        Secret = tostring(tick()),\n        Referrer = UserId,\n        Limited = {\n            Uses = 500,\n            Expires = 60 * 60 * 24 * 7 * 4, --\x3e 1 Month\n        },\n\n        Custom = {\n            Coins = 1000,\n            AlreadyUsed = {},\n        },\n    })\n\n    return Link\nend\n')))}p.isMDXComponent=!0}}]);