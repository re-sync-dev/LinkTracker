"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[256],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>y});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,y=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return r?t.createElement(y,o(o({ref:n},d),{},{components:r})):t.createElement(y,o({ref:n},d))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},16748:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=r(87462),a=(r(67294),r(3905));const i={sidebar_position:1},o="Invite testers",l={unversionedId:"examples/invite-testers",id:"examples/invite-testers",title:"Invite testers",description:"Server",source:"@site/docs/examples/invite-testers.md",sourceDirName:"examples",slug:"/examples/invite-testers",permalink:"/LinkTracker/docs/examples/invite-testers",draft:!1,editUrl:"https://github.com/re-sync-dev/LinkTracker/edit/main/docs/examples/invite-testers.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Examples",permalink:"/LinkTracker/docs/examples/"},next:{title:"Promo Code",permalink:"/LinkTracker/docs/examples/promo-code"}},s={},c=[{value:"Server",id:"server",level:2}],d={toc:c},u="wrapper";function p(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"invite-testers"},"Invite testers"),(0,a.kt)("h2",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'--[==[\n\n    Copyright (C) Re-Sync - All Rights Reserved\n\n    [init.server.lua]:\n        An example of how you could go about inviting testers to your game.\n\n    [Author(s)]:\n        Vyon - https://github.com/Vyon\n\n--]==]\n\n-- Services:\nlocal Players = game:GetService("Players")\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\n\n-- Modules:\nlocal LinkTracker = require(Path.To.LinkTracker)\n\n-- Types:\ntype LinkData = LinkTracker.LinkData\ntype CustomLinkData = LinkData & {\n    AllowedUsers: { number },\n}\n\n-- Locals:\nlocal CreateLink = Instance.new("RemoteFunction")\nCreateLink.Name = "CreateLink"\nCreateLink.Parent = ReplicatedStorage\n\n-- Variables:\nlocal RateLimit = {}\n\n-- Functions:\nlocal function OnPlayerAdded(Player: Player)\n    LinkTracker:OnJoin(Player, {\n        InvalidLink = function(Player: Player)\n            if Player.UserId == game.CreatorId then\n                return\n            end\n\n            Player:Kick("The link you joined from is invalid.")\n        end,\n\n        UsableLink = function(Player: Player, LinkData: CustomLinkData)\n            local Index = table.find(LinkData.AllowedUsers, Player.UserId)\n\n            if not Index then\n                return false\n            end\n\n            return true\n        end,\n\n        ConsumeLink = function(Player: Player, LinkData: CustomLinkData)\n            local Index = table.find(LinkData.AllowedUsers, Player.UserId)\n\n            if not Index then\n                return\n            end\n\n            table.remove(LinkData.AllowedUsers, Index)\n\n            local Referrer = Players:GetNameFromUserIdAsync(LinkData.Referrer)\n            print(`[LinkTracker]: {Player.Name} joined from {Referrer}\'s link.`)\n        end,\n    })\nend\n\n-- Main:\nfor _, Player in Players:GetPlayers() do\n    task.spawn(OnPlayerAdded, Player)\nend\n\n-- Connections:\nPlayers.PlayerAdded:Connect(OnPlayerAdded)\n\n-- Binds:\nCreateLink.OnServerInvoke = function(Player: Player, UserIds: { number }): string?\n    if table.find(RateLimit, Player.UserId) then\n        return\n    end\n\n    table.insert(RateLimit, Player.UserId)\n\n    task.delay(10, function()\n        table.remove(RateLimit, table.find(RateLimit, Player.UserId))\n    end)\n\n    local Link = LinkTracker:GenerateLink({\n        Secret = tostring(tick()),\n        Referrer = Player.UserId,\n        Limited = {\n            Uses = #UserIds,\n            Expires = 60 * 60 * 24,\n        },\n\n        Custom = {\n            AllowedUsers = UserIds,\n        },\n    })\n\n    return Link\nend\n')))}p.isMDXComponent=!0}}]);